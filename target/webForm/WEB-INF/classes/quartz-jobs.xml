<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd	
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- ==========JDBCJobStore========== -->
 	<bean id="scheduler"  class="org.springframework.scheduling.quartz.SchedulerFactoryBean" >    
		<!-- <property name="dataSource">   <ref bean="dataSource" /></property>-->
         
        <!-- 方式一 : quartz.properties配置文件是放在classpath下      -->
		<property name="configLocation" value="classpath:quartz.properties" />
         
		<!--方式二 : quartz.properties配置文件是放在WEB-INF下   
		<property name="configLocation" value="/WEB-INF/quartz.properties" /> -->  
		<!--方式三 : quartz.properties配置文件写入到配置XML中
		<property name="quartzProperties">    
		    <props>    
		        <prop key="org.quartz.scheduler.instanceName">quartzScheduler</prop>    
		        <prop key="org.quartz.scheduler.instanceId">AUTO</prop>    
		        <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>    
		        <prop key="org.quartz.threadPool.threadCount">3</prop>    
		        <prop key="org.quartz.threadPool.threadPriority">5</prop>    
		        <prop key="org.quartz.jobStore.misfireThreshold">60000</prop>    
		        <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>    
		        <prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.MSSQLDelegate </prop>    
		        <prop key="org.quartz.jobStore.selectWithLockSQL">SELECT * FROM {0}LOCKS UPDLOCK WHERE LOCK_NAME = ?</prop>    
		        <prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
		        <prop key="org.quartz.jobStore.isClustered">true</prop>
		        <prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>
		    </props>
		</property>
        -->  
       <property name="applicationContextSchedulerContextKey"  value="applicationContextKey" />    
       <property name="autoStartup" value="true" />      
	</bean>
	<!-- ==========RAMJobStore========== -->
	<!--Quartz Jobs
	<bean id="quartzJob" class="com.shaunz.framework.example.quartz.HelloWorld"/>-->
	<!--Quartz Details
	<bean id="jobtask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="quartzJob"/>
		<property name="targetMethod" value="execute"/>
	</bean>-->
	<!--Quartz triggers
	<bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	    <property name="jobDetail" ref="jobtask"/>
	    <property name="cronExpression" value="0/5 * * * * ?"/>
	</bean>-->
	<!--Quartz schedulers manager
	<bean id="startQuartz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	    <property name="triggers">
	        <list>
	            <ref bean="doTime"/>
	        </list>
	    </property>
	</bean>-->
</beans>
