<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

    <!-- Should be same with the shiroFilter in web.xml -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro core security interface -->
        <property name="securityManager" ref="securityManager"/>
        <!-- Login url default "/login.jsp" if not be configured -->
        <property name="loginUrl" value="/index.html"/>
        <!-- Success url, we will specify in the controller -->
        <!-- <property name="successUrl" value="/" ></property> -->
        <!-- Unauthorized url -->
        <property name="unauthorizedUrl" value="/error/unauthorized"/>

        <property name="filterChainDefinitions">
            <value>
            	/index.html=anon
            	/navBarPage.html=anon
            	/dropDownLstPage.html=anon
            	/marketInfoPage.html=anon
            	/staticResources/**=anon
            	/index.jsp=anon
            	/signIn.html=anon
            	/signUp.html=anon
                /**=authc
            </value>
        </property>

    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean>
    <!--<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Md5CredentialsMatcher"></bean>

    <bean id="jdbcRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"></property>
        <property name="permissionsLookupEnabled" value="true"></property>
        <property name="dataSource" ref="dataSource"></property>
        <property name="authenticationQuery"
                  value="SELECT password FROM sec_user WHERE user_name = ?"></property>
        <property name="userRolesQuery"
                  value="SELECT role_name from sec_user_role left join sec_role using(role_id) left join sec_user using(user_id) WHERE user_name = ?"></property>
        <property name="permissionsQuery"
                  value="SELECT permission_name FROM sec_role_permission left join sec_role using(role_id) left join sec_permission using(permission_id) WHERE role_name = ?"></property>
    </bean>-->

    <!-- Shiro security manager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="shaunzRealm"></property>
        <property name="cacheManager" ref="shiroCacheManager"></property>
    </bean>
    
    <!-- Shiro Annotation -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
      depends-on="lifecycleBeanPostProcessor">
    	<property name="proxyTargetClass" value="true" />
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>