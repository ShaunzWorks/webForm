<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shaunz.framework.common.auditlogs.dao.SystemLogMapper" >
  <resultMap id="BaseResultMap" type="com.shaunz.framework.common.auditlogs.entity.SystemLog" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="function_id" property="functionId" jdbcType="VARCHAR" />
    <result column="target_id" property="targetId" jdbcType="VARCHAR" />
    <result column="opt_type" property="optType" jdbcType="VARCHAR" />
    <result column="opt_time" property="optTime" jdbcType="TIMESTAMP" />
    <result column="content" property="content" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, function_id, target_id, opt_type, opt_time, content
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_sys_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_sys_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.shaunz.framework.common.auditlogs.entity.SystemLog" >
    insert into tb_sys_log (id, user_id, function_id, 
      target_id, opt_type, opt_time, 
      content)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{functionId,jdbcType=VARCHAR}, 
      #{targetId,jdbcType=VARCHAR}, #{optType,jdbcType=VARCHAR}, #{optTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shaunz.framework.common.auditlogs.entity.SystemLog" >
    insert into tb_sys_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="functionId != null" >
        function_id,
      </if>
      <if test="targetId != null" >
        target_id,
      </if>
      <if test="optType != null" >
        opt_type,
      </if>
      <if test="optTime != null" >
        opt_time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="functionId != null" >
        #{functionId,jdbcType=VARCHAR},
      </if>
      <if test="targetId != null" >
        #{targetId,jdbcType=VARCHAR},
      </if>
      <if test="optType != null" >
        #{optType,jdbcType=VARCHAR},
      </if>
      <if test="optTime != null" >
        #{optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shaunz.framework.common.auditlogs.entity.SystemLog" >
    update tb_sys_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="functionId != null" >
        function_id = #{functionId,jdbcType=VARCHAR},
      </if>
      <if test="targetId != null" >
        target_id = #{targetId,jdbcType=VARCHAR},
      </if>
      <if test="optType != null" >
        opt_type = #{optType,jdbcType=VARCHAR},
      </if>
      <if test="optTime != null" >
        opt_time = #{optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shaunz.framework.common.auditlogs.entity.SystemLog" >
    update tb_sys_log
    set user_id = #{userId,jdbcType=VARCHAR},
      function_id = #{functionId,jdbcType=VARCHAR},
      target_id = #{targetId,jdbcType=VARCHAR},
      opt_type = #{optType,jdbcType=VARCHAR},
      opt_time = #{optTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>